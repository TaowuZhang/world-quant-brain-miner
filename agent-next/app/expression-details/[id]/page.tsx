import Link from "next/link"
import { ArrowLeft, Brain, Download, Star, StarOff } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"

export default function ExpressionDetailsPage({ params }: { params: { id: string } }) {
  // In a real app, you would fetch the expression data based on the ID
  const expression = alphaExpressions.find((exp) => exp.id === params.id) || alphaExpressions[0]

  return (
    <div className="flex flex-col min-h-screen">
      <header className="border-b">
        <div className="container flex h-16 items-center justify-between px-4 md:px-6">
          <div className="flex items-center gap-2">
            <Brain className="h-6 w-6 text-primary" />
            <span className="text-xl font-bold">AlphaMind</span>
          </div>
          <nav className="hidden md:flex gap-6">
            <Link href="/" className="text-sm font-medium hover:underline underline-offset-4">
              Home
            </Link>
            <Link href="/agents" className="text-sm font-medium hover:underline underline-offset-4">
              Agents
            </Link>
            <Link href="/networks" className="text-sm font-medium hover:underline underline-offset-4">
              Networks
            </Link>
            <Link href="/results" className="text-sm font-medium hover:underline underline-offset-4 text-primary">
              Results
            </Link>
          </nav>
          <div className="flex items-center gap-4">
            <Button variant="outline" size="sm">
              Sign In
            </Button>
            <Button size="sm">Get Started</Button>
          </div>
        </div>
      </header>
      <main className="flex-1 container px-4 py-6 md:px-6 md:py-8">
        <div className="flex items-center gap-2 mb-8">
          <Button variant="outline" size="icon" asChild>
            <Link href="/results">
              <ArrowLeft className="h-4 w-4" />
            </Link>
          </Button>
          <h1 className="text-3xl font-bold">Alpha Expression Details</h1>
        </div>
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <div className="lg:col-span-2 space-y-6">
            <Card>
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <CardTitle>Expression</CardTitle>
                  <Button variant="ghost" size="icon" className="h-8 w-8">
                    {expression.starred ? (
                      <Star className="h-4 w-4 fill-primary text-primary" />
                    ) : (
                      <StarOff className="h-4 w-4" />
                    )}
                  </Button>
                </div>
                <CardDescription>
                  Alpha expression generated by {expression.network} on {expression.dateGenerated}
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="bg-muted p-4 rounded-md font-mono text-sm overflow-x-auto">{expression.expression}</div>
              </CardContent>
              <CardFooter className="flex justify-between">
                <div className="flex items-center gap-2">
                  <Badge
                    variant={
                      expression.performance > 0.7 ? "default" : expression.performance > 0.4 ? "secondary" : "outline"
                    }
                  >
                    Performance: {(expression.performance * 100).toFixed(1)}%
                  </Badge>
                </div>
                <Button variant="outline" size="sm" className="gap-1">
                  <Download className="h-4 w-4" /> Export
                </Button>
              </CardFooter>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Performance Analysis</CardTitle>
                <CardDescription>Detailed analysis of this alpha expression's performance.</CardDescription>
              </CardHeader>
              <CardContent>
                <Tabs defaultValue="chart">
                  <TabsList className="mb-4">
                    <TabsTrigger value="chart">Performance Chart</TabsTrigger>
                    <TabsTrigger value="metrics">Metrics</TabsTrigger>
                    <TabsTrigger value="backtest">Backtest Results</TabsTrigger>
                  </TabsList>
                  <TabsContent value="chart">
                    <div className="h-[300px] bg-muted rounded-md flex items-center justify-center">
                      <p className="text-muted-foreground">Performance chart visualization would appear here</p>
                    </div>
                  </TabsContent>
                  <TabsContent value="metrics">
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                      <MetricCard title="Sharpe Ratio" value="1.87" />
                      <MetricCard title="Max Drawdown" value="-12.3%" />
                      <MetricCard title="Win Rate" value="68.5%" />
                      <MetricCard title="Avg Return" value="0.42%" />
                      <MetricCard title="Volatility" value="14.2%" />
                      <MetricCard title="Sortino Ratio" value="2.14" />
                      <MetricCard title="Calmar Ratio" value="1.32" />
                      <MetricCard title="Information Ratio" value="0.95" />
                    </div>
                  </TabsContent>
                  <TabsContent value="backtest">
                    <div className="space-y-4">
                      <div className="h-[200px] bg-muted rounded-md flex items-center justify-center">
                        <p className="text-muted-foreground">Backtest performance chart would appear here</p>
                      </div>
                      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <MetricCard title="Total Return" value="28.7%" />
                        <MetricCard title="Annual Return" value="12.4%" />
                        <MetricCard title="Trades" value="142" />
                        <MetricCard title="Success Rate" value="71.2%" />
                      </div>
                    </div>
                  </TabsContent>
                </Tabs>
              </CardContent>
            </Card>
          </div>
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Expression Details</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <h3 className="text-sm font-medium mb-1">Generated By</h3>
                  <p className="text-sm">{expression.network}</p>
                </div>
                <div>
                  <h3 className="text-sm font-medium mb-1">Date Generated</h3>
                  <p className="text-sm">{expression.dateGenerated}</p>
                </div>
                <div>
                  <h3 className="text-sm font-medium mb-1">Performance</h3>
                  <Badge
                    variant={
                      expression.performance > 0.7 ? "default" : expression.performance > 0.4 ? "secondary" : "outline"
                    }
                  >
                    {(expression.performance * 100).toFixed(1)}%
                  </Badge>
                </div>
                <div>
                  <h3 className="text-sm font-medium mb-1">Status</h3>
                  <Badge variant="outline">Active</Badge>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Explanation</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground">
                  This alpha expression identifies stocks that have experienced a significant price increase (more than
                  5%) over the past 5 days, with high trading volume (more than 1 million shares on average over 10
                  days), and are currently oversold (RSI below 30).
                </p>
                <div className="mt-4 space-y-2">
                  <div className="bg-muted p-2 rounded-md">
                    <p className="text-xs font-medium">close_5d_ret &gt; 0.05</p>
                    <p className="text-xs text-muted-foreground">5-day return greater than 5%</p>
                  </div>
                  <div className="bg-muted p-2 rounded-md">
                    <p className="text-xs font-medium">volume_10d_avg &gt; 1000000</p>
                    <p className="text-xs text-muted-foreground">10-day average volume greater than 1 million</p>
                  </div>
                  <div className="bg-muted p-2 rounded-md">
                    <p className="text-xs font-medium">rsi_14 &lt; 30</p>
                    <p className="text-xs text-muted-foreground">14-day RSI less than 30 (oversold)</p>
                  </div>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Related Expressions</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {alphaExpressions.slice(1, 4).map((relatedExp) => (
                  <Link href={`/expression-details/${relatedExp.id}`} key={relatedExp.id}>
                    <div className="bg-muted hover:bg-muted/80 p-3 rounded-md cursor-pointer">
                      <div className="flex items-center justify-between mb-1">
                        <Badge variant="outline">{relatedExp.network}</Badge>
                        <Badge
                          variant={
                            relatedExp.performance > 0.7
                              ? "default"
                              : relatedExp.performance > 0.4
                                ? "secondary"
                                : "outline"
                          }
                        >
                          {(relatedExp.performance * 100).toFixed(1)}%
                        </Badge>
                      </div>
                      <p className="text-xs font-mono truncate">{relatedExp.expression}</p>
                    </div>
                  </Link>
                ))}
              </CardContent>
            </Card>
          </div>
        </div>
      </main>
      <footer className="border-t">
        <div className="container flex flex-col gap-4 py-10 md:flex-row md:gap-8 md:py-12">
          <div className="flex flex-col gap-2 md:gap-4">
            <div className="flex items-center gap-2">
              <Brain className="h-5 w-5 text-primary" />
              <span className="text-lg font-bold">AlphaMind</span>
            </div>
            <p className="text-sm text-muted-foreground">AI-powered financial alpha mining platform</p>
          </div>
          <div className="ml-auto flex flex-col gap-2 md:flex-row md:gap-8">
            <div className="flex flex-col gap-2">
              <h3 className="text-sm font-medium">Platform</h3>
              <nav className="flex flex-col gap-2">
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Features
                </Link>
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Pricing
                </Link>
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Documentation
                </Link>
              </nav>
            </div>
            <div className="flex flex-col gap-2">
              <h3 className="text-sm font-medium">Company</h3>
              <nav className="flex flex-col gap-2">
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  About
                </Link>
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Blog
                </Link>
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Contact
                </Link>
              </nav>
            </div>
            <div className="flex flex-col gap-2">
              <h3 className="text-sm font-medium">Legal</h3>
              <nav className="flex flex-col gap-2">
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Terms
                </Link>
                <Link href="#" className="text-sm text-muted-foreground hover:underline">
                  Privacy
                </Link>
              </nav>
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}

function MetricCard({ title, value }: { title: string; value: string }) {
  return (
    <div className="bg-muted p-3 rounded-md">
      <p className="text-xs text-muted-foreground">{title}</p>
      <p className="text-lg font-medium">{value}</p>
    </div>
  )
}

interface AlphaExpression {
  id: string
  expression: string
  network: string
  performance: number
  dateGenerated: string
  starred: boolean
}

const alphaExpressions: AlphaExpression[] = [
  {
    id: "1",
    expression: "close_5d_ret > 0.05 and volume_10d_avg > 1000000 and rsi_14 < 30",
    network: "Market Trend Network",
    performance: 0.82,
    dateGenerated: "2023-06-15",
    starred: true,
  },
  {
    id: "2",
    expression: "macd_signal > macd_line and close > sma_50 and adx_14 > 25",
    network: "Volatility Prediction",
    performance: 0.67,
    dateGenerated: "2023-06-14",
    starred: false,
  },
  {
    id: "3",
    expression: "close < lower_bollinger_20_2 and volume > volume_5d_avg * 1.5",
    network: "Sector Rotation",
    performance: 0.75,
    dateGenerated: "2023-06-13",
    starred: true,
  },
  {
    id: "4",
    expression: "rsi_14 < 30 and close_5d_ret < -0.1 and market_cap > 1000000000",
    network: "Market Trend Network",
    performance: 0.59,
    dateGenerated: "2023-06-12",
    starred: false,
  },
  {
    id: "5",
    expression: "ema_20 > ema_50 and ema_50 > ema_200 and volume_trend_5d > 0",
    network: "Global Macro Network",
    performance: 0.88,
    dateGenerated: "2023-06-11",
    starred: true,
  },
  {
    id: "6",
    expression: "sector_momentum_rank < 3 and pe_ratio < industry_avg_pe * 0.8",
    network: "Sector Rotation",
    performance: 0.35,
    dateGenerated: "2023-06-10",
    starred: false,
  },
]

